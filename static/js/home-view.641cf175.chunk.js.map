{"version":3,"file":"static/js/home-view.641cf175.chunk.js","mappings":"6LACA,EAAuB,wBAAvB,EAA2D,6BAA3D,EAAqG,8B,SCqCrG,EAlCkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAACC,GAAD,OACV,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CACEG,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMV,IAHnB,WAME,gBACEE,UAAWC,EACXQ,IAAG,yCAAoCN,EAAMO,aAC7CC,IAAKR,EAAMS,KACXC,MAAM,SAER,uBAAIV,EAAMS,WAbLT,EAAMG,W,sLCTjBQ,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,qCACaC,IAIrC,SAASY,EAAiBC,GAC/B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0Ba,EAD1B,+CAKxB,SAASC,EAAevB,GAC7B,OAAOU,EAAuB,GAAD,OACxBF,EADwB,kBACNR,EADM,oBACQS,EADR,oBAKxB,SAASe,EAAexB,GAC7B,OAAOU,EAAuB,GAAD,OACxBF,EADwB,kBACNR,EADM,4BACgBS,EADhB,oBAKxB,SAASgB,EAAkBzB,GAChC,OAAOU,EAAuB,GAAD,OACxBF,EADwB,kBACNR,EADM,4BACgBS,EADhB,sB,6GClC/B,EAAwB,wB,SCIT,SAASiB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpC,EAAP,KAAeqC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA0BC,MAAK,SAACC,GAAD,OAAUJ,EAAUI,EAAKC,cACvD,KAGD,iCACE,eAAIvC,UAAWC,EAAf,6BACA,SAACuC,EAAA,EAAD,CAAW3C,OAAQA","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","services/api.jsx","webpack://goit-react-hw-05-movies/./src/views/HomeView/HomeView.module.css?053b","views/HomeView/HomeView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieItem_list__wzdJ-\",\"movieItem\":\"MovieItem_movieItem__2LkR+\",\"movieImage\":\"MovieItem_movieImage__Atx+F\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport s from './MovieItem.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst MovieItem = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={s.list}>\r\n      {movies.map((movie) => (\r\n        <li key={movie.id} className={s.movieItem}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${movie.id}`,\r\n              state: { from: location },\r\n            }}\r\n          >\r\n            <img\r\n              className={s.movieImage}\r\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n              alt={movie.name}\r\n              width=\"320\"\r\n            />\r\n            <p>{movie.name}</p>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nMovieItem.propTypes = {\r\n  movies: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.number.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      poster_path: propTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default MovieItem;\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"d752e046a9268238157ca8971cc96b61\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok  \r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchSearchQuery(searchQuery) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\r\n  );\r\n}\r\n\r\nexport function fetchMovieById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchMovieCast(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomeView_title__bBIvN\"};","import { useState, useEffect } from 'react';\r\nimport * as api from '../../services/api';\r\nimport MovieItem from '../../components/MovieItem/MovieItem';\r\nimport s from './HomeView.module.css';\r\n\r\nexport default function HomeView() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.fetchTrendingMovies().then((data) => setMovies(data.results));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Trending today</h1>\r\n      <MovieItem movies={movies} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["movies","location","useLocation","className","s","map","movie","to","pathname","id","state","from","src","poster_path","alt","name","width","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchQuery","searchQuery","fetchMovieById","fetchMovieCast","fetchMovieReviews","HomeView","useState","setMovies","useEffect","api","then","data","results","MovieItem"],"sourceRoot":""}